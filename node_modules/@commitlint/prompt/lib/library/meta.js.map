{"version":3,"sources":["../../src/library/meta.js"],"names":["meta","settings","chalk","grey","Object","entries","filter","item","map","name","value","join"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;AAKe,SAASA,IAAT,CAAcC,QAAd,EAAwB;AACtC,SAAOC,eAAMC,IAAN,CACNC,MAAM,CAACC,OAAP,CAAeJ,QAAQ,IAAI,EAA3B,EACEK,MADF,CACSC,IAAI,IAAIA,IAAI,CAAC,CAAD,CADrB,EAEEC,GAFF,CAEMD,IAAI,IAAI;AAAA,+CACUA,IADV;AAAA,UACLE,IADK;AAAA,UACCC,KADD;;AAEZ,WAAO,OAAOA,KAAP,KAAiB,SAAjB,GAA8B,IAAGD,IAAK,GAAtC,GAA4C,IAAGA,IAAK,IAAGC,KAAM,GAApE;AACA,GALF,EAMEC,IANF,CAMO,GANP,CADM,CAAP;AASA","sourcesContent":["import chalk from 'chalk';\n\n/**\n * Get formatted meta hints for configuration\n * @param  {object} settings dictionary to parse\n * @return {string}          formatted meta information\n */\nexport default function meta(settings) {\n\treturn chalk.grey(\n\t\tObject.entries(settings || {})\n\t\t\t.filter(item => item[1])\n\t\t\t.map(item => {\n\t\t\t\tconst [name, value] = item;\n\t\t\t\treturn typeof value === 'boolean' ? `[${name}]` : `[${name}=${value}]`;\n\t\t\t})\n\t\t\t.join(' ')\n\t);\n}\n"],"file":"meta.js"}